// @NonCPS
// def getChangeString() {
//     MAX_MSG_LEN = 100
//     def changeString = ""
//     echo "Gathering SCM changes"
//     def changeLogSets = currentBuild.rawBuild.changeSets
//     for (int i = 0; i < changeLogSets.size(); i++) {
//         def entries = changeLogSets[i].items
//         for (int j = 0; j < entries.length; j++) {
//             def entry = entries[j]
//             truncated_msg = entry.msg.take(MAX_MSG_LEN)
//             changeString += " - ${truncated_msg} [${entry.author}]\n"
//         }
//     }
//     if (!changeString) {
//         changeString = " - No new changes"
//     }
//     return changeString
// }

pipeline {
    agent any

    stages {
        // Select environment
        // -- Test Environment
        stage('Use Test Env') {
            when {
                branch 'test'
            }
            steps {
                script {
                    env.TAG = 'test'
                    env.ENV_FILE = "${env.ENV_TEST}"
                    env.SERVER_URL = "${env.SERVER_URL_TEST}"
                    env.SERVER_SSH_KEY_FILE = "${env.SERVER_SSH_KEY_FILE_TEST}"
                    env.APP_URL = "${env.APP_URL_TEST}"
                }

                echo "BUILD_ENV: test"
                echo "TAG: $TAG"
            }
        }
        // -- Production Environment
        stage('Use Production Env') {
            when {
                branch 'master'
            }
            steps {
                script {
                    env.TAG = 'production'
                    env.ENV_FILE = "${env.ENV_PRODUCTION}"
                    env.SERVER_URL = "${env.SERVER_URL_PRODUCTION}"
                    env.SERVER_SSH_KEY_FILE = "${env.SERVER_SSH_KEY_FILE_PRODUCTION}"
                    env.APP_URL = "${env.APP_URL_PRODUCTION}"
                }

                echo "BUILD_ENV: production"
                echo "TAG: $TAG"
            }
        }
        // Build
        stage('Build') {
            steps {
                sh 'chmod +x ./jenkins/scripts/build.sh && ./jenkins/scripts/build.sh'
            }
        }
        // Deploy
        stage('Deploy') {
            when {
                branch 'master'
            }
            steps {
                sh 'chmod +x ./jenkins/scripts/deploy.sh && ./jenkins/scripts/deploy.sh'
            }
        }
    }

    // post {
    //     always {
    //       $changeString
    //     }
    // }
}
